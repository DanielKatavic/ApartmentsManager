@using Recaptcha.Web.Mvc;
@model PublicSite.Models.ViewModels.ApartmentDetailsVM
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isLogedIn = !string.IsNullOrWhiteSpace(HttpContext.Current.User.Identity.Name);
}

<style>
    .g-recaptcha {
        transform: scale(0.77);
        transform-origin: 0 0;
    }
</style>

<div>
    <h1 style="text-align:center; padding: .3em 1em .3em 1em; margin: 0; font-weight: 600">@Model.Apartment.Name.ToUpper()</h1>
    <div class="d-flex justify-content-center mb-3" style="gap: 1em">
        @Html.Partial("_ApartmentSpecs", Model.Apartment)
    </div>
</div>
<div class="container">
    <hr />
    <div class="row">
        <div class="col" style="width: 50%; display: flex; justify-content: right; align-items: center">
            <div class="row" style="width: 35em;">
                @Html.Partial("_ApartmentImages", Model.Apartment.Images)
            </div>
        </div>
        <div class="col" style="width: 50%; text-align: center;">
            <form id="bookingForm" method="post">
                <div class="row" style="width: 30em;">
                    <h2>Contact us</h2>
                    <div class="input-group mb-3">
                        <span class="input-group-text">First and last name</span>
                        <input type="text" aria-label="First name" class="form-control" placeholder="First name" required value="@Model.FirstName">
                        <input type="text" aria-label="Last name" class="form-control" placeholder="Last name" required value="@Model.LastName">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="email">@@</span>
                        <input type="email" class="form-control" placeholder="Email" aria-label="Email" aria-describedby="email" required value="@Model.Email">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="phone">Phone/mobile</span>
                        <input type="text" class="form-control" placeholder="Phone" aria-label="Phone" aria-describedby="phone" required value="@Model.Phone">
                    </div>
                    <div class="d-flex gap-3">
                        <div class="input-group mb-3">
                            <span class="input-group-text" id="adults">Adults</span>
                            <input type="number" class="form-control" placeholder="Adults" aria-label="Adults" aria-describedby="adults" min="0" required>
                        </div>
                        <div class="input-group mb-3">
                            <span class="input-group-text" id="children">Children</span>
                            <input type="number" class="form-control" placeholder="Children" aria-label="Children" aria-describedby="children" min="0" required>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">From</span>
                        <input type="date" class="form-control" placeholder="StartDate" aria-label="StartDate" aria-describedby="startDate" id="startDate" required>
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text">To</span>
                        <input type="date" class="form-control" placeholder="EndDate" aria-label="EndDate" aria-describedby="endDate" id="endDate" required>
                    </div>
                    <div class="d-flex">
                        @{
                            if (!isLogedIn)
                            {
                                @Html.RecaptchaWidget()
                            }
                        }
                        <button type="submit" class="btn btn-primary w-100" id="btnSendRequest">Send request</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <hr />
    <div class="row mb-3" style="text-align: center; margin-top: 1em">
        <h3>Facilities</h3>
        <div class="col" style="overflow-x: auto">
            @Html.Partial("_ApartmentTags", Model.Apartment.Tags)
        </div>
    </div>
    <hr />
    <div class="row w-50 m-auto">
        <div class="d-flex justify-content-between align-items-baseline">
            <div class="mb-2">
                <h3>Guest reviews</h3>
            </div>
            <div class="d-flex">
                @{
                    if (Model.Apartment.Reviews.Count == 0)
                    {
                        <label style="margin-right: .3em; font-weight: 700">Apartment has no reviews yet</label>
                    }
                    else
                    {
                        <label style="margin-right: .3em; font-weight: bold">@Model.Apartment.Reviews.Average(a => a.Stars).ToString("0.##") / 5</label>
                        <img src="~/Content/images/star.png" style="height: 1.7em; width: 1.7em" />
                    }
                }
            </div>
        </div>
        <div class="mb-5" style="overflow-x: auto; height: 20em">
            @{
                if (isLogedIn)
                {
                    <div class="card d-inline-block" style="width: 36em; height: 12em; border-radius: .5em; overflow: hidden;">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center gap-1">
                                <img src="~/Content/images/user-circle.png" style="height: 2em; width: 2em;" />
                                <h5 class="m-0">@Model.FullName</h5>
                            </div>
                            <div class="d-flex">
                                <input type="number" min="1" max="5" value="5" style="margin-right: .2em; width: 2.7em" id="inputStars" />
                                <img src="~/Content/images/star.png" style="height: 1.7em; width: 1.7em" />
                            </div>
                        </div>
                        <div class="card-body">
                            @Html.TextArea("txtDetails", new { @class = "card-text mb-3", style = "width: 100%; resize: none;", id = "reviewDetails" })
                            <button type="submit" class="btn btn-primary" id="btnPostReview">Post review</button>
                        </div>
                    </div>
                }
            }
            @if (Model.Apartment.Reviews.Count > 0)
            {
                @Html.Partial("_ApartmentReview", Model.Apartment.Reviews)
            }
        </div>
    </div>
</div>

@section scripts{
    <script>
        $("#btnPostReview").on("click", function () {
            console.log("ss");
            var userId = @Model.UserId;
            var apartmentId = @Model.Apartment.Id;
            var stars = $("#inputStars").val();
            var details = $("#reviewDetails").val();
            $.ajax({
                url: "@Url.Action("AddReview", "Apartment")",
                data: { userId, apartmentId, stars, details },
                success: function () {
                    $("#reviewDetails").val("");
                    $("#inputStars").val(5);
                    location.reload();
                }
            });
        });

        $("#bookingForm").on("submit", function () {
            disableButton();

            $.ajax({
                url: "",
                type: "post",
                async: false,
                success: function (data) {
                    showSuccessNotification();
                    $("#bookingForm")[0].reset();
                }
            });
            return false;
        });

        $(document).ready(function () {
            setDatePickerDate();
        });

        function disableButton() {
            $("#btnSendRequest").attr("disabled", true);
            $("#btnSendRequest").blur();
        }

        function showSuccessNotification() {
            $("#success-notification").fadeIn().delay(5000).fadeOut();
        }

        function setDatePickerDate() {
            var today = new Date();
            var dd = today.getDate() + 1;
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = yyyy + '-' + mm + '-' + dd;
            document.getElementById("startDate").setAttribute("min", today);
            document.getElementById("endDate").setAttribute("min", today);
        }
    </script>
}